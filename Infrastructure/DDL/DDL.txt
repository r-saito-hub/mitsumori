-- 外部キーを有効化
PRAGMA foreign_keys = ON;

DROP TABLE IF EXISTS company_information;
-- 自社情報
CREATE TABLE company_information (
	id INTEGER PRIMARY KEY AUTOINCREMENT,           -- ID
	name VARCHAR(100) NOT NULL,                     -- 会社名
	postal_code VARCHAR(8) NOT NULL,                -- 郵便番号(ハイフンあり)
	address1 VARCHAR(50) NOT NULL,                  -- 住所1
	address2 VARCHAR(50) NOT NULL,                  -- 住所2
	tel VARCHAR(15) NOT NULL,                       -- 電話番号
	fax VARCHAR(15) NOT NULL,                       -- FAX番号
	created_at TIMESTAMP NOT NULL,                  -- 登録日時
	updated_at TIMESTAMP                            -- 更新日時
);

DROP TABLE IF EXISTS sales_taxes;
-- 消費税
CREATE TABLE sales_taxes (
	id INTEGER PRIMARY KEY AUTOINCREMENT,           -- ID
	apply_start_date DATE NOT NULL,                 -- 適用開始日
	rate real NOT NULL,                             -- 税率
	created_at TIMESTAMP NOT NULL,                  -- 登録日時
	updated_at TIMESTAMP,                           -- 更新日時

	UNIQUE (apply_start_date)
);


DROP TABLE IF EXISTS employees;
-- 従業員
CREATE TABLE employees (
	id INTEGER PRIMARY KEY AUTOINCREMENT,           -- ID
	employee_number VARCHAR(5) NOT NULL,            -- 従業員番号
	name VARCHAR(20) NOT NULL,                      -- 従業員名
	name_kana VARCHAR(20) NOT NULL,                 -- 従業員名(かな)
	created_at TIMESTAMP NOT NULL,                  -- 登録日時
	updated_at TIMESTAMP,                           -- 更新日時

	UNIQUE (employee_number)
);

DROP TABLE IF EXISTS payment_conditions;
-- 支払条件
CREATE TABLE payment_conditions (
	id INTEGER PRIMARY KEY AUTOINCREMENT,           -- ID
	name VARCHAR(20) NOT NULL,                      -- 名前
	cut_off INTEGER NOT NULL,                       -- 締日
	due_date INTEGER NOT NULL,                      -- 支払日
	month_offset INTEGER NOT NULL,                  -- 支払月(0:当月,1:翌月)
	created_at TIMESTAMP NOT NULL,                  -- 登録日時
	updated_at TIMESTAMP,                           -- 更新日時

	UNIQUE (name)
);

DROP TABLE IF EXISTS customers;
-- 顧客
CREATE TABLE customers (
	id INTEGER PRIMARY KEY AUTOINCREMENT,           -- ID
	name VARCHAR(100) NOT NULL,                     -- 名前
	kana_name VARCHAR(100) NOT NULL,                -- 名前(かな)
	pic_id INTEGER NOT NULL,                        -- 営業担当者ID
	payment_id INTEGER NOT NULL,                    -- 支払条件ID
	postal_code VARCHAR(8) NOT NULL,                -- 郵便番号(ハイフンあり)
	address1 VARCHAR(50) NOT NULL,                  -- 住所1
	address2 VARCHAR(50) NOT NULL,                  -- 住所2
	created_at TIMESTAMP NOT NULL,                  -- 登録日時
	updated_at TIMESTAMP,                           -- 更新日時

	UNIQUE (name, address1, address2),
	FOREIGN KEY (pic_id) REFERENCES employees(id),
	FOREIGN KEY (payment_id) REFERENCES payment_conditions(id)
);

DROP TABLE IF EXISTS estimates;
-- 見積
CREATE TABLE estimates (
	id INTEGER PRIMARY KEY AUTOINCREMENT,           -- ID
	estimate_number VARCHAR(20) NOT NULL,           -- 見積番号
	customer_id INTEGER NOT NULL,                   -- 顧客ID
	title VARCHAR(50) NOT NULL,                     -- 件名
	due_date DATE NOT NULL,                         -- 納期
	payment_id INTEGER NOT NULL,                    -- 支払条件ID
	pic_employee_id INTEGER NOT NULL,               -- 発行担当者ID
	apply_tax_id INTEGER NOT NULL,                  -- 適用消費税ID
	print_date DATE NOT NULL,                       -- 発行日
	effective_date DATE NOT NULL,                   -- 見積有効期限
	remarks VARCHAR(500) NOT NULL,                  -- 備考
	created_at TIMESTAMP NOT NULL,                  -- 登録日時
	updated_at TIMESTAMP,                           -- 更新日時

	UNIQUE (estimate_number),
	FOREIGN KEY (customer_id) REFERENCES customers(id),
	FOREIGN KEY (payment_id) REFERENCES payment_conditions(id),
	FOREIGN KEY (pic_employee_id) REFERENCES employees(id),
	FOREIGN KEY (apply_tax_id) REFERENCES sales_taxes(id)
);

DROP TABLE IF EXISTS estimate_details;
-- 見積明細
CREATE TABLE estimate_details (
	id INTEGER PRIMARY KEY AUTOINCREMENT,           -- ID
	estimate_id INTEGER NOT NULL,                   -- 見積ID
	display_order INTEGER NOT NULL,                 -- 明細表示順
	item_name VARCHAR(50) NOT NULL,                 -- 品名
	quantity INTEGER NOT NULL,                      -- 数量
	unit_price INTEGER NOT NULL,                    -- 単価
	created_at TIMESTAMP NOT NULL,                  -- 登録日時
	updated_at TIMESTAMP,                           -- 更新日時

	UNIQUE (estimate_id, display_order),
	FOREIGN KEY (estimate_id) REFERENCES estimates(id)
);
